" ========== General ==========
" show line number / relative line number
set number
set relativenumber

" indent lines automatically
set autoindent

" set paste mode
" set paste

" whether vi-compatible
set nocompatible    " be iMproved

" always show a status line
set laststatus=2

" enable 256 colors in vim
set t_Co=256

" set mapping and key code delays, see https://www.johnhawthorn.com/2012/09/vi-escape-delays/
set timeoutlen=1000 ttimeoutlen=0

set showcmd

" show invisible characters
set list!

" fold
set foldcolumn=1
" ========== /General ==========



" ========== Tab-space ==========
" size of a hard tabstop
set tabstop=4

" expand tab
set expandtab

" size of an "indent"
set shiftwidth=2

" a combination of spaces and tabs are used to simulate tab stops at a width
" other than the (hard)tabstop
set softtabstop=4

" make "tab" insert indents instead of tabs at the beginning of a line
set smarttab
" ========== /Tab-space ==========



" ========== Invisible Chars ==========
set listchars=tab:>-,trail:~,extends:>,precedes:<
"set list

" visit this page for color values:
"    https://alvinalexander.com/linux/vi-vim-editor-color-scheme-syntax
" highlight NonText ctermfg=8 guifg=8
" highlight SpecialKey ctermfg=8 guifg=8

map <F5> :set list!<CR>
" ========== /Invisible Chars ==========



" ========== Search ==========
" highlight search
set hlsearch

" increment search
set is

" ignore case
set ignorecase
" ========== /Search ==========



" ========== Encoding ==========
" encodings vim used internally, for buffers, messages, etc
set encoding=utf-8

" file encoding for new file
set fileencoding=utf-8

" the order of encodings vim use to determine file encoding, cp936 is gbk
set fileencodings=ucs-bom,utf-8,cp936
" ========== /Encoding ==========



" ========== Shortcuts ==========
let mapleader=" "

" easy saving
map <leader>s :w<CR>

" windows navigation
map <leader>h :wincmd h<CR>
map <leader>j :wincmd j<CR>
map <leader>k :wincmd k<CR>
map <leader>l :wincmd l<CR>
" ========== /Shortcuts ==========



" ========== Copy & Paste ==========
" copy to clipboard
map <leader>y "+y

set clipboard=unnamed

if has("clipboard")
    if has("unnamedplus") " X11 support
        set clipboard+=unnamedplus
    endif
endif

" copy whole file to clipboard
map <leader>c :% y +<CR>

" paste from register, copy a word and use it to replace multiple other words
map <leader>rr ciw<C-r>0<Esc>b
" ========== /Copy & Paste ==========



" ========== Abbreviation ==========
" abbreviations, not effective in paste mode
"
:abbr begincomment
\<CR>/********************
\<CR>* begin
\<CR>********************/

:abbr endcomment
\<CR>/********************
\<CR>* end
\<CR>********************/

inoremap `j ```javascript<CR><CR>```<Esc>ki
" ========== /Abbreviation ==========



" ========== Autocompletion ==========
" use Tab for auto completion
" :imap <Tab> <C-P>

" dictionary and thesaurus
set dictionary=~/.vim/mydict
set thesaurus=~/.vim/mythesaurus
" ========== /Autocompletion ==========



" ========== Plugins ==========
" auto install vim-plug and plugins if not exist
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

source ~/.vim/plugins.vim
" ========== /Plugins ==========



" ========== Cursor style ==========
let &t_SI = "\e[5 q"
let &t_EI = "\e[1 q"

" reset the cursor on start (for older versions of vim, usually not required)
augroup myCmds
au!
autocmd VimEnter * silent !echo -ne "\e[2 q"
augroup END
" ========== /Cursor style ==========
